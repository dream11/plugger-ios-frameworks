#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.6.1 (swiftlang-5.6.0.323.66 clang-1316.0.20.12)
#ifndef PLUGGERCORE_SWIFT_H
#define PLUGGERCORE_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="PluggerCore",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


SWIFT_CLASS("_TtC11PluggerCore12ClientConfig")
@interface ClientConfig : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class HTTPConfig;

SWIFT_PROTOCOL("_TtP11PluggerCore6Config_")
@protocol Config
@property (nonatomic, strong) HTTPConfig * _Nonnull httpConfig;
@end


SWIFT_CLASS("_TtC11PluggerCore12CommonConfig")
@interface CommonConfig : NSObject <Config>
@property (nonatomic, strong) HTTPConfig * _Nonnull httpConfig;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_PROTOCOL("_TtP11PluggerCore12Configurable_")
@protocol Configurable
- (void)configureWithConfig:(id <Config> _Nonnull)config;
@end


SWIFT_CLASS("_TtC11PluggerCore5Delay")
@interface Delay : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSString;
@class DeviceLocationInfo;

SWIFT_PROTOCOL("_TtP11PluggerCore20DeviceInfoDataSource_")
@protocol DeviceInfoDataSource
- (NSString * _Nonnull)getOs SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getOsVersion SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getPlatform SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getBrand SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getModel SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getBundleId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getDeviceId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getAppVersion SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getAppName SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getBuildNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getCarrier SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getDeviceName SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getDeviceScreenSize SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getManufacturer SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getLanguage SWIFT_WARN_UNUSED_RESULT;
- (DeviceLocationInfo * _Nullable)getLocationInfo SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC11PluggerCore10DeviceInfo")
@interface DeviceInfo : NSObject <DeviceInfoDataSource>
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (NSString * _Nonnull)getOs SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getOsVersion SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getPlatform SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getBrand SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getModel SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getBundleId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getDeviceId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getAppVersion SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getAppName SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getBuildNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getCarrier SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getDeviceName SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getDeviceScreenSize SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getManufacturer SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getLanguage SWIFT_WARN_UNUSED_RESULT;
- (DeviceLocationInfo * _Nullable)getLocationInfo SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_CLASS("_TtC11PluggerCore18DeviceLocationInfo")
@interface DeviceLocationInfo : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11PluggerCore10HTTPConfig")
@interface HTTPConfig : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, HTTPMethod, open) {
  HTTPMethodGET = 0,
  HTTPMethodPOST = 1,
  HTTPMethodPUT = 2,
  HTTPMethodDELETE = 3,
};


SWIFT_PROTOCOL("_TtP11PluggerCore13Initializable_")
@protocol Initializable
- (nonnull instancetype)init;
@end


SWIFT_CLASS("_TtC11PluggerCore14NetworkManager")
@interface NetworkManager : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, NetworkManagerError, open) {
  NetworkManagerErrorInvalidHTTPConfig = 0,
  NetworkManagerErrorInvalidURL = 1,
  NetworkManagerErrorRequest = 2,
  NetworkManagerErrorResponse = 3,
  NetworkManagerErrorMalformedData = 4,
  NetworkManagerErrorNon2XXResponse = 5,
};
static NSString * _Nonnull const NetworkManagerErrorDomain = @"PluggerCore.NetworkManagerError";

enum PluggerNotifiableEvents : NSInteger;

SWIFT_PROTOCOL("_TtP11PluggerCore10Notifiable_")
@protocol Notifiable
- (void)onNotifyWithEventType:(enum PluggerNotifiableEvents)eventType data:(NSDictionary * _Nullable)data;
@end

typedef SWIFT_ENUM(NSInteger, PluggerError, open) {
  PluggerErrorAlreadyInitialized = 0,
  PluggerErrorPluginNotFound = 1,
  PluggerErrorPluginAlreadyExists = 2,
};
static NSString * _Nonnull const PluggerErrorDomain = @"PluggerCore.PluggerError";

typedef SWIFT_ENUM(NSInteger, PluggerNotifiableEvents, open) {
  PluggerNotifiableEventsUserLoggedIn = 0,
  PluggerNotifiableEventsUserLoggedOut = 1,
  PluggerNotifiableEventsUserLocationSet = 2,
  PluggerNotifiableEventsAppDidBecomeActive = 3,
  PluggerNotifiableEventsAppDidEnterBackground = 4,
  PluggerNotifiableEventsAppWillEnterForeground = 5,
  PluggerNotifiableEventsAppWillResignActive = 6,
  PluggerNotifiableEventsAppWillTerminate = 7,
};


SWIFT_CLASS("_TtC11PluggerCore11PluggerUser")
@interface PluggerUser : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, PluginList, open) {
  PluginListCommon = 0,
  PluginListExperiments = 1,
  PluginListFeatures = 2,
  PluginListEvents = 3,
};


SWIFT_CLASS("_TtC11PluggerCore13RetrialConfig")
@interface RetrialConfig : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, RetrialDelayPolicy, open) {
  RetrialDelayPolicyLinear = 0,
  RetrialDelayPolicyIncremental = 1,
  RetrialDelayPolicyQuadratic = 2,
};


SWIFT_CLASS("_TtC11PluggerCore22StorageDeleteOperation")
@interface StorageDeleteOperation : NSOperation
@property (nonatomic, readonly, getter=isAsynchronous) BOOL asynchronous;
@property (nonatomic, readonly, getter=isExecuting) BOOL executing;
@property (nonatomic, readonly, getter=isFinished) BOOL finished;
- (void)start;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, StorageManagerError, open) {
  StorageManagerErrorMakeDirectory = 0,
  StorageManagerErrorFileNotFound = 1,
  StorageManagerErrorRead = 2,
  StorageManagerErrorWrite = 3,
  StorageManagerErrorDelete = 4,
};
static NSString * _Nonnull const StorageManagerErrorDomain = @"PluggerCore.StorageManagerError";


SWIFT_CLASS("_TtC11PluggerCore13TimeoutConfig")
@interface TimeoutConfig : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.6.1 (swiftlang-5.6.0.323.66 clang-1316.0.20.12)
#ifndef PLUGGERCORE_SWIFT_H
#define PLUGGERCORE_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="PluggerCore",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


SWIFT_CLASS("_TtC11PluggerCore12ClientConfig")
@interface ClientConfig : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class HTTPConfig;

SWIFT_PROTOCOL("_TtP11PluggerCore6Config_")
@protocol Config
@property (nonatomic, strong) HTTPConfig * _Nonnull httpConfig;
@end


SWIFT_CLASS("_TtC11PluggerCore12CommonConfig")
@interface CommonConfig : NSObject <Config>
@property (nonatomic, strong) HTTPConfig * _Nonnull httpConfig;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_PROTOCOL("_TtP11PluggerCore12Configurable_")
@protocol Configurable
- (void)configureWithConfig:(id <Config> _Nonnull)config;
@end


SWIFT_CLASS("_TtC11PluggerCore5Delay")
@interface Delay : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSString;
@class DeviceLocationInfo;

SWIFT_PROTOCOL("_TtP11PluggerCore20DeviceInfoDataSource_")
@protocol DeviceInfoDataSource
- (NSString * _Nonnull)getOs SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getOsVersion SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getPlatform SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getBrand SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getModel SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getBundleId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getDeviceId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getAppVersion SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getAppName SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getBuildNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getCarrier SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getDeviceName SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getDeviceScreenSize SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getManufacturer SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getLanguage SWIFT_WARN_UNUSED_RESULT;
- (DeviceLocationInfo * _Nullable)getLocationInfo SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC11PluggerCore10DeviceInfo")
@interface DeviceInfo : NSObject <DeviceInfoDataSource>
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (NSString * _Nonnull)getOs SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getOsVersion SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getPlatform SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getBrand SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getModel SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getBundleId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getDeviceId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getAppVersion SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getAppName SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getBuildNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getCarrier SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getDeviceName SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getDeviceScreenSize SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getManufacturer SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getLanguage SWIFT_WARN_UNUSED_RESULT;
- (DeviceLocationInfo * _Nullable)getLocationInfo SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_CLASS("_TtC11PluggerCore18DeviceLocationInfo")
@interface DeviceLocationInfo : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11PluggerCore10HTTPConfig")
@interface HTTPConfig : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, HTTPMethod, open) {
  HTTPMethodGET = 0,
  HTTPMethodPOST = 1,
  HTTPMethodPUT = 2,
  HTTPMethodDELETE = 3,
};


SWIFT_PROTOCOL("_TtP11PluggerCore13Initializable_")
@protocol Initializable
- (nonnull instancetype)init;
@end


SWIFT_CLASS("_TtC11PluggerCore14NetworkManager")
@interface NetworkManager : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, NetworkManagerError, open) {
  NetworkManagerErrorInvalidHTTPConfig = 0,
  NetworkManagerErrorInvalidURL = 1,
  NetworkManagerErrorRequest = 2,
  NetworkManagerErrorResponse = 3,
  NetworkManagerErrorMalformedData = 4,
  NetworkManagerErrorNon2XXResponse = 5,
};
static NSString * _Nonnull const NetworkManagerErrorDomain = @"PluggerCore.NetworkManagerError";

enum PluggerNotifiableEvents : NSInteger;

SWIFT_PROTOCOL("_TtP11PluggerCore10Notifiable_")
@protocol Notifiable
- (void)onNotifyWithEventType:(enum PluggerNotifiableEvents)eventType data:(NSDictionary * _Nullable)data;
@end

typedef SWIFT_ENUM(NSInteger, PluggerError, open) {
  PluggerErrorAlreadyInitialized = 0,
  PluggerErrorPluginNotFound = 1,
  PluggerErrorPluginAlreadyExists = 2,
};
static NSString * _Nonnull const PluggerErrorDomain = @"PluggerCore.PluggerError";

typedef SWIFT_ENUM(NSInteger, PluggerNotifiableEvents, open) {
  PluggerNotifiableEventsUserLoggedIn = 0,
  PluggerNotifiableEventsUserLoggedOut = 1,
  PluggerNotifiableEventsUserLocationSet = 2,
  PluggerNotifiableEventsAppDidBecomeActive = 3,
  PluggerNotifiableEventsAppDidEnterBackground = 4,
  PluggerNotifiableEventsAppWillEnterForeground = 5,
  PluggerNotifiableEventsAppWillResignActive = 6,
  PluggerNotifiableEventsAppWillTerminate = 7,
};


SWIFT_CLASS("_TtC11PluggerCore11PluggerUser")
@interface PluggerUser : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, PluginList, open) {
  PluginListCommon = 0,
  PluginListExperiments = 1,
  PluginListFeatures = 2,
  PluginListEvents = 3,
};


SWIFT_CLASS("_TtC11PluggerCore13RetrialConfig")
@interface RetrialConfig : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, RetrialDelayPolicy, open) {
  RetrialDelayPolicyLinear = 0,
  RetrialDelayPolicyIncremental = 1,
  RetrialDelayPolicyQuadratic = 2,
};


SWIFT_CLASS("_TtC11PluggerCore22StorageDeleteOperation")
@interface StorageDeleteOperation : NSOperation
@property (nonatomic, readonly, getter=isAsynchronous) BOOL asynchronous;
@property (nonatomic, readonly, getter=isExecuting) BOOL executing;
@property (nonatomic, readonly, getter=isFinished) BOOL finished;
- (void)start;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, StorageManagerError, open) {
  StorageManagerErrorMakeDirectory = 0,
  StorageManagerErrorFileNotFound = 1,
  StorageManagerErrorRead = 2,
  StorageManagerErrorWrite = 3,
  StorageManagerErrorDelete = 4,
};
static NSString * _Nonnull const StorageManagerErrorDomain = @"PluggerCore.StorageManagerError";


SWIFT_CLASS("_TtC11PluggerCore13TimeoutConfig")
@interface TimeoutConfig : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#endif
